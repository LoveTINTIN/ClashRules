#节点信息
proxies:
  - {name: 代理🫧, type: socks5, server: , port: , username: , password: }
  - {name: 直连🌞, type: direct}
  - {name: 拒绝⛔️, type: reject}
  - {name: 荷兰🇳🇱, type: hysteria2, server: , port: , skip-cert-verify: , password: }
  - {name: 德国🇩🇪, type: hysteria2, server: , port: , skip-cert-verify: , password: }
# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
proxy-groups:
  - {name: 甲-国内🇨🇳, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 甲-非中国♻️, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 乙-社交-Telegram📲, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 丙-影音-YouTube🎬, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 丙-影音-TikTok🎵, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 丙-影音-奈飞🎥, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 丁-大厂-Apple🍎, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 丁-大厂-微软🪟, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 丁-大厂-Google🍀, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 丁-大厂-OneDrive🐬, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 戊-工具-Speedtest✈️, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 戊-工具-GitHub👨🏿‍💻, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 戊-工具-ChatGPT💡, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 戊-工具-Dokcer💿, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 己-金融-PayPal💶, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 己-金融-数字货币🪙, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 庚-游戏平台🎮, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: 辛-工作🧑‍💻, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
  - {name: GLOBAL, type: select, proxies: [代理🫧, 直连🌞, 拒绝⛔️, 荷兰🇳🇱, 德国🇩🇪]}
 # - {name: ALL🌐, type: select, include-all: false}

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
#域名规则
  - RULE-SET,direct_class,甲-国内🇨🇳
  - RULE-SET,private_domain,甲-国内🇨🇳
  - RULE-SET,proxylite_class,甲-非中国♻️
  - RULE-SET,telegram_domain,乙-社交-Telegram📲
  - RULE-SET,youtube_domain,丙-影音-YouTube🎬
  - RULE-SET,tiktok_domain,丙-影音-TikTok🎵
  - RULE-SET,netflix_domain,丙-影音-奈飞🎥
  - RULE-SET,apple_domain,丁-大厂-Apple🍎
  - RULE-SET,google_domain,丁-大厂-Google🍀
  - RULE-SET,onedrive_domain,丁-大厂-OneDrive🐬
  - RULE-SET,microsoft_domain,丁-大厂-微软🪟
  - RULE-SET,speedtest_domain,戊-工具-Speedtest✈️
  - RULE-SET,chatgpt_domain,戊-工具-ChatGPT💡
  - RULE-SET,github_domain,戊-工具-GitHub👨🏿‍💻
  - RULE-SET,docker_class,戊-工具-Dokcer💿
  - RULE-SET,paypal_domain,己-金融-PayPal💶
  - RULE-SET,crypto1_class,己-金融-数字货币🪙
  - RULE-SET,crypto2_class,己-金融-数字货币🪙
  - RULE-SET,game1_class,庚-游戏平台🎮
  - RULE-SET,game2_class,庚-游戏平台🎮
  - RULE-SET,game3_class,庚-游戏平台🎮
  - RULE-SET,game4_class,庚-游戏平台🎮
  - RULE-SET,game5_class,庚-游戏平台🎮
  - RULE-SET,work_class,辛-工作🧑‍💻

#IP规则
  - RULE-SET,gfw_domain,甲-非中国♻️
  - RULE-SET,geolocation-!cn,甲-非中国♻️
  - RULE-SET,cn_domain,甲-国内🇨🇳
  - RULE-SET,google_ip,丁-大厂-Google🍀,no-resolve
  - RULE-SET,netflix_ip,丙-影音-奈飞🎥,no-resolve
  - RULE-SET,telegram_ip,乙-社交-Telegram📲,no-resolve
  - RULE-SET,cn_ip,甲-国内🇨🇳
  - MATCH,GLOBAL

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  work_class: { <<: *class, url: "https://raw.githubusercontent.com/LoveTINTIN/ClashRules/refs/heads/main/work.list"}
  docker_class: { <<: *class, url: "https://raw.githubusercontent.com/huangshine/Clash/refs/heads/main/rules/docker.list"}
  direct_class: { <<: *class, url: "https://raw.githubusercontent.com/LoveTINTIN/ClashRules/refs/heads/main/Direct.list"}
  proxylite_class: { <<: *class, url: "https://raw.githubusercontent.com/LoveTINTIN/ClashRules/refs/heads/main/ProxyLite.list"}
  crypto1_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Ruleset/Crypto.list"}
  crypto2_class: { <<: *class, url: "https://raw.githubusercontent.com/huangshine/Clash/refs/heads/main/rules/Crypto.list"} 
  game1_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list"}
  game2_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Origin.list"}
  game3_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list"}
  game4_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list"}
  game5_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  chatgpt_domain: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}


